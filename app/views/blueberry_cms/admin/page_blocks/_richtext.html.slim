.rich-text-block data-controller='position-switch'
  .form-layout
    = f.input :css_class

    = f.input :orientation,
              collection:    translated_enum(BlueberryCMS::PageBlocks::RichText, :orientation),
              include_blank: false,
              input_html:    { \
                data: { target: 'position-switch.positionSwitcher', action: 'change->position-switch#changePosition' } \
              }

  .form-layout
    div data={ target: 'position-switch.wrapper' }
      .image-holder
        - if f.object.image.present?
          .well.well-sm
            - if f.object.image.content_type == 'image/svg+xml'
              = image_tag f.object.image.url
            - else
              = image_tag f.object.image.url(:thumb)

            hr

            - I18n.available_locales.each do |locale|
              .tab-content class="#{locale}-content"
                = f.input :image_alt
                  = f.simple_fields_for :image_alt_translations do |localized_field|
                    = localized_field.input locale, input_html: { value: richtext.image_alt_translations[locale], class: 'redactor' }, label: false

                = f.input :image_title
                  = f.simple_fields_for :image_title_translations do |localized_field|
                    = localized_field.input locale, input_html: { value: richtext.image_title_translations[locale], class: 'redactor' }, label: false

            = f.input :remove_image, as: :boolean
        - else
          = f.input :image

      .content-holder
        - I18n.available_locales.each do |locale|
          .tab-content class="#{locale}-content"
            = f.input :content
              = f.simple_fields_for :content_translations do |localized_field|
                = localized_field.input locale, input_html: { value: richtext.content_translations[locale], class: 'redactor' }, as: :text, label: false

  .form-layout
    .image-holder
      - if f.object.background_image.present?
        - if f.object.background_image?
          - if f.object.background_image.content_type == 'image/svg+xml'
            = image_tag f.object.background_image.url
          - else
            = image_tag f.object.background_image.url(:thumb)
        = f.input :remove_background_image, as: :boolean
      - else
        = f.input :background_image
